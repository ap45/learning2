@Service
public class SearchService {
    @Autowired
    private EntityManager entityManager;

    public List<?> search(String columnName, String value) {
        CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
        CriteriaQuery<?> query = criteriaBuilder.createQuery();

        Metamodel metamodel = entityManager.getMetamodel();
        EntityType<Profile> profileEntityType = metamodel.entity(Profile.class);

        Root<?> root = query.from(profileEntityType);
        query.select(root);

        addPredicate(criteriaBuilder, root, columnName, value, query);

        TypedQuery<?> typedQuery = entityManager.createQuery(query);
        return typedQuery.getResultList();
    }

    private void addPredicate(CriteriaBuilder criteriaBuilder, Root<?> root,
                              String columnName, String value, CriteriaQuery<?> query) {
        Metamodel metamodel = entityManager.getMetamodel();

        for (EntityType<?> entityType : metamodel.getEntities()) {
            SingularAttribute<?, ?> attribute = entityType.getSingularAttribute(columnName, String.class);
            if (attribute != null) {
                Path<String> columnPath = root.get(attribute);
                Predicate predicate = criteriaBuilder.equal(criteriaBuilder.lower(columnPath), value.toLowerCase());
                query.where(predicate);
                break;
            }
        }
    }
}
