import org.springframework.jdbc.core.RowMapper;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.Date;

public class SearchResultRowMapper implements RowMapper<SearchResult> {
    @Override
    public SearchResult mapRow(ResultSet rs, int rowNum) throws SQLException {
        SearchResult searchResult = new SearchResult();
        
        searchResult.setFirstName(rs.getString("firstName"));
        searchResult.setLastName(rs.getString("lastName"));
        
        // Assuming nationalities is stored as a comma-separated string in the database
        String nationalitiesStr = rs.getString("nationalities");
        if (nationalitiesStr != null && !nationalitiesStr.isEmpty()) {
            String[] nationalityArray = nationalitiesStr.split(",");
            List<String> nationalityList = new ArrayList<>();
            for (String nationality : nationalityArray) {
                nationalityList.add(nationality.trim());
            }
            searchResult.setNationalities(nationalityList);
        } else {
            searchResult.setNationalities(new ArrayList<>());
        }
        
        searchResult.setStatus(rs.getString("status"));
        searchResult.setSourceListName(rs.getString("sourceListName"));
        searchResult.setComplianceUnit(rs.getString("complianceUnit"));
        searchResult.setDomicile(rs.getString("domicile"));
        searchResult.setCreationDate(rs.getDate("creationDate"));
        searchResult.setUpdatedDate(rs.getDate("updatedDate"));
        searchResult.setProfileID(rs.getInt("profileID"));
        searchResult.setOwnershipCountry(rs.getString("ownershipCountry"));
        searchResult.setOwnershipDivision(rs.getString("ownershipDivision"));
        
        // Assuming dob is stored as a list of dates in the database
        List<Date> dobList = new ArrayList<>();
        String dobStr = rs.getString("dob");
        if (dobStr != null && !dobStr.isEmpty()) {
            String[] dobArray = dobStr.split(",");
            for (String dob : dobArray) {
                dobList.add(Date.valueOf(dob.trim()));
            }
        }
        searchResult.setDob(dobList);
        
        searchResult.setOnboardingCategory(rs.getString("onboardingCategory"));
        searchResult.setTotalRowCount(rs.getLong("totalRowCount"));
        searchResult.setNotes(rs.getString("notes"));
        
        return searchResult;
    }
}
