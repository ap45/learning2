import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.client.RestTemplate;

@RunWith(SpringRunner.class)
@SpringBootTest
public class WorkbenchControllerIntegrationTest {

    @InjectMocks
    private WorkbenchController workbenchController;

    @Mock
    private WorkbenchServiceFactory workbenchServiceFactory;

    @Mock
    private RestTemplate restTemplate;

    @Test
    public void testGetWorkbenchDataForProfileSearchGrid() {
        // Arrange
        String gridId = Requests.PROFILE_SEARCH_GRID.name();
        WorkbenchRequest workbenchRequest = createSampleWorkbenchRequest(gridId);
        SearchResult mockResult = createSampleSearchResult();
        WorkbenchService<?> mockService = mock(WorkbenchService.class);
        when(mockService.getWorkbenchData(any(WorkbenchRequest.class))).thenReturn(mockResult);
        when(workbenchServiceFactory.getService(any())).thenReturn(mockService);

        // Act
        ResponseEntity<WorkbenchResponse<?>> responseEntity = workbenchController.getWorkbenchData(workbenchRequest);

        // Assert
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        // Add more specific assertions based on your response structure
        assertEquals(mockResult, responseEntity.getBody().getData());
    }

    private WorkbenchRequest createSampleWorkbenchRequest(String gridId) {
        WorkbenchRequest request = new WorkbenchRequest();
        request.setGridID(gridId);

        SearchCriteria searchCriteria = new SearchCriteria();
        searchCriteria.setQueryKeyLabel("profileID");
        searchCriteria.setQueryKey("profileID");
        searchCriteria.setQueryOperator("=");
        searchCriteria.setQueryValue("1002843629");

        request.setSearchCriteria(Collections.singletonList(searchCriteria));

        return request;
    }

    private SearchResult createSampleSearchResult() {
        SearchResult result = new SearchResult();
        result.setFirstName("Muhammed Khairiz");
        result.setLastName("Khalid");
        result.setStatus("Active");
        // Set other properties based on your response structure
        return result;
    }
}
